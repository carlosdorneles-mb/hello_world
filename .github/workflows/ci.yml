name: ðŸ”˜ Lint, Tests, Sonar and Sec
on:
  pull_request:
    types: [opened, reopened, synchronize]
    branches:
      - main

permissions:
  contents: read

env:
  GOPRIVATE: "github.com/mercadobitcoin"
  token: ${{ secrets.PAT_MB }}
  DOCKERTEST: localhost

jobs:
  BuildTest:
    runs-on: self-hosted
    env:
      TZ: America/Sao_Paulo
      LC_ALL: C.UTF-8
      LANG: C.UTF-8
    strategy:
      fail-fast: false
      matrix:
        python-version:
          - "3.12"
          - "3.13"

    name: Build and Test
    steps:
      - uses: actions/checkout@v4

      - name: Install uv and set the python version
        uses: astral-sh/setup-uv@v5
        with:
          version: "latest"
          enable-cache: true
          python-version: ${{ matrix.python-version }}

      - name: Cache the virtualenv
        uses: actions/cache@v4
        with:
          path: ./.venv
          key: ${{ runner.os }}-venv-${{ hashFiles('**/uv.lock') }}

      - name: Install dependencies
        run: |
          sudo apt-get update && sudo apt-get install -y default-libmysqlclient-dev tzdata
          sudo ln -sf /usr/share/zoneinfo/America/Sao_Paulo /etc/localtime && sudo dpkg-reconfigure -f noninteractive tzdata
          uv venv --allow-existing
          uv sync --frozen --all-extras

      - name: Detect inconsistencies
        run: make detect

      - name: Lint
        run: make lint

      - name: Execute unit tests and coverage
        run: make test-cov-report

      - name: SonarAnalysis
        uses: SonarSource/sonarqube-scan-action@v4.2.1
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_URL }}
        with:
          projectBaseDir: ./
          args: >
            -Dsonar.projectKey=${{ github.event.repository.name }}
            -Dsonar.python.coverage.reportPaths=coverage.xml
            -Dsonar.exclusions=test_*.py

      - name: SonarQube Server Quality Gate check
        id: sonarqube-quality-gate-check
        uses: sonarsource/sonarqube-quality-gate-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_URL }}
        with:
          pollingTimeoutSec: 600
          scanMetadataReportFile: ./.scannerwork/report-task.txt
